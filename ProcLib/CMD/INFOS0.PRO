//==========================================================================
// EVENTDEF.PRO
//   Description: Send all infos (call during ITI_CHK or TIME_OUT state processing).
//                ALL TRL_* variables are sent.
//                This file will be used for translating the session/infos variables
//   Author: chenchal.subraveti@vanderbilt.edu
//   Date: 2019-03-07
//==========================================================================
declare SEND_INFOS();
declare SEND_INFO_EVT(int evtVal);
declare SEND_INFO_REL_TIME(int evtVal, int offsetVal);

declare constant int INFOS_ZERO = 3000;
declare int          N_INFOS;


process SEND_INFOS()
{
    declare int TRL_RAND_NEG_NUMBER_TEST;

    N_INFOS = 0;
    printf("****INFOS.PRO: Sending infos....\n");
    TRL_RAND_NEG_NUMBER_TEST = -((random(5000) + 1) * 2);
    spawnwait SEND_INFO_EVT(TRL_RAND_NEG_NUMBER_TEST);
    spawnwait SEND_INFO_EVT(TRL_TRIAL_NUMBER);
    spawnwait SEND_INFO_EVT(TRL_BLOCK_NUM);
    spawnwait SEND_INFO_EVT(TRL_TRIAL_TYPE);
    spawnwait SEND_INFO_EVT(TRL_IS_RUNNING);
    spawnwait SEND_INFO_EVT(TRL_IS_I_IN_FLIGHT);
    spawnwait SEND_INFO_EVT(TRL_IS_FIX_ON);
    spawnwait SEND_INFO_EVT(TRL_IS_FIX_ACQUIRED);
    spawnwait SEND_INFO_EVT(INCEMENT_TARG_DURATION_FLAG);
    spawnwait SEND_INFO_EVT(TRL_IS_TARG_ACQUIRED);
    spawnwait SEND_INFO_EVT(TRL_IS_STOP_SIGNAL_ON);
    spawnwait SEND_INFO_EVT(TRL_IS_XTRA_HOLD_DONE);
    spawnwait SEND_INFO_EVT(TRL_IS_TIMEOUT);
    spawnwait SEND_INFO_EVT(TRL_IS_NON_CANCELLED_NO_BRK);
    spawnwait SEND_INFO_EVT(TRL_IS_CANCELLED_NO_BRK);
    spawnwait SEND_INFO_EVT(TRL_IS_LO_RWRD);
    spawnwait SEND_INFO_EVT(TRL_IS_FIX_REIGNITE);
    spawnwait SEND_INFO_EVT(TRL_IS_STAIRCASE_SSD);
    spawnwait SEND_INFO_REL_TIME(TRL_TASK_START_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TRIAL_START_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_EOT_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_GET_READY_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_READY_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_ABORT_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_FIX_ON_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_ACQUIRE_FIX_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_ACQUIRE_FIX_ERROR_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_FIXATE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_FIX_BREAK_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TARGET_PRE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TARGET_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TARGET_ACQUIRED_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_DECIDE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_SACCADE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_ERLY_SACCADE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_LATE_SACC_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_NO_SACCADE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_ACQUIRE_TARGET_ERROR_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_XTRA_HOLD_END_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_BRK_XTRA_HOLD_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_BRK_PRE_TONE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_BRK_TONE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_BRK_PRE_RWRD_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_BRK_RWRD_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TONE_DELAY_START_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TONE_DELAY_END_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_REWARD_DELAY_START_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_REWARD_DELAY_END_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_ITI_START_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_ITI_END_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_START_INFOS_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_END_INFOS_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TIMEOUT_START_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TIMEOUT_END_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_STOP_SIGNAL_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_CANCEL_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_BRK_CANCEL_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_NOGO_SACCADE_PRE_SSD_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_NOGO_SACCADE_POST_SSD_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_NOGO_EARLY_SACCADE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_NOGO_LATE_SACCADE_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_XTRA_RWRD_ON_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_XTRA_RWRD_OFF_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_REL_TIME(TRL_TASK_END_TIME, TRL_TRIAL_START_TIME);
    spawnwait SEND_INFO_EVT(TRL_CUM_DURATION);
    spawnwait SEND_INFO_EVT(TRL_GET_READY_DURATION);
    spawnwait SEND_INFO_EVT(TRL_FIX_HOLD_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_FIX_HOLD_ADJUST);
    spawnwait SEND_INFO_EVT(TRL_TARG_ON_DURATION);
    spawnwait SEND_INFO_EVT(TRL_SACC_DURATION);
    spawnwait SEND_INFO_EVT(TRL_TARG_HOLD_DURATION);
    spawnwait SEND_INFO_EVT(TRL_STOP_SIGNAL_DURATION);
    spawnwait SEND_INFO_EVT(TRL_TARG_VR_COUNT);
    spawnwait SEND_INFO_EVT(TRL_SSD_VR_COUNT);
    spawnwait SEND_INFO_EVT(TRL_USE_TRIAL_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_SSD_IDX);
    spawnwait SEND_INFO_EVT(TRL_USE_STAIRCASE);
    spawnwait SEND_INFO_EVT(TRL_USE_SSD_STEP_UP);
    spawnwait SEND_INFO_EVT(TRL_USE_SSD_STEP_DOWN);
    spawnwait SEND_INFO_EVT(TRL_USE_USE_PROVIDED_TRL_LENGTH);
    spawnwait SEND_INFO_EVT(TRL_USE_SSD_VR_COUNT);
    spawnwait SEND_INFO_EVT(TRL_USE_FIX_HOLD_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_MIN_THT_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_SSD_CANCEL_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_PRE_SSD_FIX_ON_DELAY);
    spawnwait SEND_INFO_EVT(TRL_USE_POST_SSD_FIX_ON_DELAY);
    spawnwait SEND_INFO_EVT(TRL_USE_TONE_DELAY);
    spawnwait SEND_INFO_EVT(TRL_USE_TONE_FREQ);
    spawnwait SEND_INFO_EVT(TRL_USE_TONE_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_RWRD_DELAY);
    spawnwait SEND_INFO_EVT(TRL_USE_RWRD_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_ITI_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_TIMEOUT_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_CORRECT_TRIALS_PER_BLOCK);
    spawnwait SEND_INFO_EVT(TRL_USE_REPEAT_LO_RWRD_ERROR_TRL);
    spawnwait SEND_INFO_EVT(TRL_USE_REPEAT_MAX);
    spawnwait SEND_INFO_EVT(TRL_USE_XTRA_HOLD_DURATION);
    spawnwait SEND_INFO_EVT(TRL_USE_XTRA_HOLD_TONE_RWRD_FLAG);
    spawnwait SEND_INFO_EVT(TRL_CURR_TARG_IDX);
    spawnwait SEND_INFO_EVT(int(TRL_CURR_TARG_SIZE) *100);
    spawnwait SEND_INFO_EVT(int(TRL_CURR_TARG_ANGLE) *100);
    spawnwait SEND_INFO_EVT(int(TRL_CURR_TARG_ECCENTRICITY) *100);
    spawnwait SEND_INFO_EVT(TRL_CURR_TARG_COLOR_IDX);
    spawnwait SEND_INFO_EVT(TRL_LO_RWRD_TARG_IDX);
    spawnwait SEND_INFO_EVT(TRL_REPEAT_COUNT);
    spawnwait SEND_INFO_EVT(TRL_LAST_STOP_OUTCOME_EVNTCODE);
    spawnwait SEND_INFO_EVT(TRL_LAST_GO_OUTCOME_EVNTCODE);
    spawnwait SEND_INFO_EVT(TRL_LAST_SSD_IDX);

    // Last info code
    spawnwait SEND_INFO_EVT(N_INFOS);
} /* SEND_INFOS */


process SEND_INFO_EVT(int evtVal)
{
    N_INFOS = N_INFOS + 1;
    if (evtVal == -1)
    {
        evtVal = 32768 + 1;
    }
    else if (evtVal == 0)
    {
        evtVal = 32768;
    }
    spawnwait SEND_EVT(INFOS_ZERO + evtVal);

    nexttick;
}


process SEND_INFO_REL_TIME(int evtVal, int offsetVal)
{
    N_INFOS = N_INFOS + 1;
    if (evtVal == -1)
    {
        evtVal = 32768 + 1;
    }
    else if (evtVal == 0)
    {
        evtVal = 32768;
    }
    else if (evtVal > offsetVal)
    {
        evtVal = evtVal - offsetVal;
    }
    else if (evtVal < offsetVal)
    {
        evtVal = 32768 + (offsetVal - evtVal);
    }
    spawnwait SEND_EVT(INFOS_ZERO + evtVal);

    nexttick;
}
